{% set version = "1.9.9" %}

package:
  name: libastra
  version: {{ version }}

source:
  url: https://github.com/tomopy/astra-toolbox/archive/refs/tags/{{ version }}-1.tar.gz
  sha256: b72bec97f4d0df8ed0e931e017bb003383949f395aef3332132298dac4810d88

build:
  run_exports:
    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}
  number: 1
  string: "{{ "cuda" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}"
  skip: true  # [(not (linux64 or win64)) or cuda_compiler_version == "None"]
  script:
    - for /f "tokens=* usebackq" %%f in (`where nvcc`) do (set "dummy=%%f" && call set "CUDACXX=%%dummy:\=\\%%")  # [win]
    - echo "nvcc is %CUDACXX%, CUDA path is %CUDA_PATH%"  # [win]
    - echo "CMAKE_ARGS are %CMAKE_ARGS%"  # [win]
    - cmake
      -G Ninja
      -DCMAKE_BUILD_TYPE=Release
      ${CMAKE_ARGS} ${SRC_DIR}  # [unix]
    - cmake
      -G Ninja
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_INSTALL_PREFIX=%LIBRARY_PREFIX%
      %CMAKE_ARGS% %SRC_DIR%  # [win]
    - ninja install

requirements:
  build:
    - {{ compiler('cuda') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  host:
    - boost-cpp
    - cudatoolkit

test:
  requires:
  # libastra uses header-only from Boost, but the unit tests actually link to libboost_unit_test_framework.so
    - boost-cpp
  source_files:
    - tests/astratest
  commands:
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.{{ version }}
    - "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest"

about:
  home: http://www.astra-toolbox.com
  license: GPL-3.0-only
  license_file:
    - COPYING
    - lib/licenses/rapidxml.txt
  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D
  and 3D tomography.'

extra:
  recipe-maintainers:
    - carterbox

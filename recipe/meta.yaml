{% set version = "2.0.0" %}

package:
  name: libastra
  version: {{ version }}

source:
  url: https://github.com/tomopy/astra-toolbox/archive/refs/tags/v{{ version }}-1.tar.gz
  sha256: c137a0bce7f05dcc38a286b83f6a9fd9a10edb3df66d00ed46c9bbbb4a4c50ca

build:
  run_exports:
    - {{ pin_subpackage('libastra', max_pin='x.x.x') }}
  ignore_run_exports:
  # conda-build reports the vs2015_runtime is unused
    - vs2015_runtime  # [win]
  number: 0
  string: "{{ "cuda" + cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}"
  skip: true  # [(not (linux64 or win64)) or cuda_compiler_version == "None"]

requirements:
  build:
    - {{ compiler('cuda') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  host:
    - boost-cpp
    - cudatoolkit
  run:
  # unix uses pthread, but win links to libboost:threads
    - {{ pin_compatible('boost-cpp', max_pin='x.x') }}  # [win]
  # astra is written in c++ but seems to prefer including c headers
    - ucrt  # [win]
    

test:
  requires:
  # libastra uses header-only from Boost, but the unit tests actually link to libboost_unit_test_framework.so
    - {{ pin_compatible('boost-cpp', max_pin='x.x') }}
  source_files:
    - tests/astratest  # [unix]
    - tests/astratest.exe  # [win]
  commands:
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}                          # [unix]
    - test -f $PREFIX/lib/libastra${SHLIB_EXT}.{{ version }}            # [unix]
    - "LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH ./tests/astratest"  # [unix]
    - if not exist %LIBRARY_LIB%\\astra.lib exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\astra.dll exit 1  # [win]
    - tests\\astratest                                 # [win]

about:
  home: http://www.astra-toolbox.com
  license: GPL-3.0-only
  license_file:
    - COPYING
    - lib/licenses/rapidxml.txt
  summary: 'libastra is a C++ library of high-performance GPU primitives for 2D
  and 3D tomography.'

extra:
  recipe-maintainers:
    - carterbox
